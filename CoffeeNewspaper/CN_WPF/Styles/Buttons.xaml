<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:CN_WPF">

    <ResourceDictionary.MergedDictionaries>
        <!-- Order is important -->
        <ResourceDictionary Source="Colors.xaml" />
        <ResourceDictionary Source="Fonts.xaml" />
        <ResourceDictionary Source="Texts.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- Hoverless button -->
    <Style TargetType="{x:Type Button}" x:Key="Hoverless">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- System Icon Button -->
    <Style TargetType="{x:Type Button}" x:Key="SystemIconButton" BasedOn="{StaticResource Hoverless}">

        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Margin" Value="10" />

    </Style>

    <!-- Window Control Button -->
    <Style TargetType="{x:Type Button}" x:Key="WindowControlButton" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="8" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundMainBrush}" />

        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1.5" />
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center"
                                   Text="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource BackgroundLightBrush}" />
            </Trigger>
        </Style.Triggers>

    </Style>

    <!-- Window Close Button -->
    <Style TargetType="{x:Type Button}" x:Key="WindowCloseButton" BasedOn="{StaticResource WindowControlButton}">

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Red" />
                <Setter Property="Foreground" Value="{StaticResource ForegroundVeryLightBrush}" />
            </Trigger>
        </Style.Triggers>

    </Style>

    <!-- Rating Button -->
    <Style x:Key="RatingButton" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="Background" Value="Transparent" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border"
                            Margin="0 0 -2 0"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True">
                        <Grid x:Name="container"
                                  Background="Transparent">
                            <Viewbox>
                                <TextBlock Text="{TemplateBinding Content}"
                                               Focusable="False"
                                               FontFamily="{TemplateBinding FontFamily}"
                                               FontSize="{TemplateBinding FontSize}"
                                               Foreground="{TemplateBinding Foreground}"
                                               HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                               Margin="{TemplateBinding Padding}"
                                               SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                               VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Viewbox>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Tag button -->
    <Style x:Key="TagButton" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">

        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Padding" Value="10 0" />
        <Setter Property="Margin" Value="0 10 10 0" />
        <Setter Property="BorderBrush" Value="{StaticResource ForegroundVeryDarkBrush}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border"
                            CornerRadius="10"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                        <Grid
                            Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <TextBlock 
                                x:Name="tagicon"
                                Grid.Column="0"
                                       Margin="0 0 5 0"
                                       Text="{StaticResource FontAwesomeTagIcon}"
                                       FontFamily="{StaticResource FontAwesomeSolid}"
                                       FontSize="{TemplateBinding FontSize}"
                                       Foreground="{TemplateBinding BorderBrush}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       TextAlignment="Center" 
                                       ></TextBlock>
                            <TextBlock Grid.Column="1"
                                x:Name="textblock"
                                Text="{TemplateBinding Content}"
                                Focusable="False"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                Foreground="{TemplateBinding BorderBrush}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                TextAlignment="Center" 
                                MaxWidth="150"
                                TextTrimming="CharacterEllipsis"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource ForegroundVeryDark}" Duration="0:0:0.02"
                                                    Storyboard.TargetName="border"
                                                    Storyboard.TargetProperty="Background.Color" />
                                    <ColorAnimation To="{StaticResource ForegroundVeryLight}" Duration="0:0:0.02"
                                                    Storyboard.TargetName="textblock"
                                                    Storyboard.TargetProperty="Foreground.Color" />
                                    <ColorAnimation To="{StaticResource ForegroundVeryLight}" Duration="0:0:0.02"
                                                    Storyboard.TargetName="tagicon"
                                                    Storyboard.TargetProperty="Foreground.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="Transparent" Duration="0:0:0.02" Storyboard.TargetName="border"
                                                    Storyboard.TargetProperty="Background.Color" />
                                    <ColorAnimation To="{StaticResource ForegroundVeryDark}" Duration="0:0:0.02"
                                                    Storyboard.TargetName="textblock"
                                                    Storyboard.TargetProperty="Foreground.Color" />
                                    <ColorAnimation To="{StaticResource ForegroundVeryDark}" Duration="0:0:0.02"
                                                    Storyboard.TargetName="tagicon"
                                                    Storyboard.TargetProperty="Foreground.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border"
                                    Value="{StaticResource ForegroundDarkBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Tag button With Cancel-->
    <Style x:Key="TagButtonCancel" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">

        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Padding" Value="10 0" />
        <Setter Property="Margin" Value="0 10 10 0" />
        <Setter Property="BorderBrush" Value="{StaticResource ForegroundVeryDarkBrush}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border"
                            CornerRadius="10"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                        <Grid
                            Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <TextBlock 
                                x:Name="tagicon"
                                Grid.Column="0"
                                       Margin="0 0 5 0"
                                       Text="{StaticResource FontAwesomeTagIcon}"
                                       FontFamily="{StaticResource FontAwesomeSolid}"
                                       FontSize="{TemplateBinding FontSize}"
                                       Foreground="{TemplateBinding BorderBrush}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       TextAlignment="Center" 
                                       ></TextBlock>
                            <TextBlock Grid.Column="1"
                                x:Name="textblock"
                                Text="{TemplateBinding Content}"
                                Focusable="False"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                Foreground="{TemplateBinding BorderBrush}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                TextAlignment="Center" 
                                MaxWidth="150"
                                TextTrimming="CharacterEllipsis"/>
                            <TextBlock 
                                x:Name="cancelbtn"
                                Grid.Column="2"
                                Margin="5 0 0 0"
                                Text="{StaticResource FontAwesomeTimesCircleIcon}"
                                FontFamily="{StaticResource FontAwesomeSolid}"
                                FontSize="{TemplateBinding FontSize}"
                                Foreground="{TemplateBinding BorderBrush}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                TextAlignment="Center" 
                            ></TextBlock>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource ForegroundVeryDark}" Duration="0:0:0.02"
                                                    Storyboard.TargetName="border"
                                                    Storyboard.TargetProperty="Background.Color" />
                                    <ColorAnimation To="{StaticResource ForegroundVeryLight}" Duration="0:0:0.02"
                                                    Storyboard.TargetName="textblock"
                                                    Storyboard.TargetProperty="Foreground.Color" />
                                    <ColorAnimation To="{StaticResource ForegroundVeryLight}" Duration="0:0:0.02"
                                                    Storyboard.TargetName="tagicon"
                                                    Storyboard.TargetProperty="Foreground.Color" />
                                    <ColorAnimation To="{StaticResource ForegroundVeryLight}" Duration="0:0:0.02"
                                                    Storyboard.TargetName="cancelbtn"
                                                    Storyboard.TargetProperty="Foreground.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="Transparent" Duration="0:0:0.02" Storyboard.TargetName="border"
                                                    Storyboard.TargetProperty="Background.Color" />
                                    <ColorAnimation To="{StaticResource ForegroundVeryDark}" Duration="0:0:0.02"
                                                    Storyboard.TargetName="textblock"
                                                    Storyboard.TargetProperty="Foreground.Color" />
                                    <ColorAnimation To="{StaticResource ForegroundVeryDark}" Duration="0:0:0.02"
                                                    Storyboard.TargetName="tagicon"
                                                    Storyboard.TargetProperty="Foreground.Color" />
                                    <ColorAnimation To="{StaticResource ForegroundVeryDark}" Duration="0:0:0.02"
                                                    Storyboard.TargetName="cancelbtn"
                                                    Storyboard.TargetProperty="Foreground.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border"
                                    Value="{StaticResource ForegroundDarkBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- RecognizeSuggest button-->
    <Style x:Key="RecognizeSuggestButton" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">

        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Padding" Value="2 0" />
        <Setter Property="Margin" Value="0 2 2 0" />
        <Setter Property="BorderBrush" Value="{StaticResource BackgroundLightBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundDarkBrush}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border"
                            Padding="{TemplateBinding Padding}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding BorderBrush}"
                            SnapsToDevicePixels="True">
                        <TextBlock 
                                x:Name="textblock"
                                Text="{TemplateBinding Content}"
                                Focusable="False"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                Foreground="{TemplateBinding Foreground}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                TextAlignment="Center" 
                                MaxWidth="150"
                                TextTrimming="CharacterEllipsis"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation To="0.5" Duration="0:0:0.02"
                                                    Storyboard.TargetName="border"
                                                    Storyboard.TargetProperty="Opacity" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation To="1" Duration="0:0:0.02"
                                                     Storyboard.TargetName="border"
                                                     Storyboard.TargetProperty="Opacity" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border"
                                    Value="{StaticResource ForegroundDarkBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- Search Cancel button -->
    <Style x:Key="SearchCancelButton" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">

        <Setter Property="Background" Value="{StaticResource ForegroundVeryLightBrush}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Padding" Value="5 0" />
        <Setter Property="Margin" Value="0 10 10 0" />
        <Setter Property="BorderBrush" Value="{StaticResource ForegroundVeryDarkBrush}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border"
                            CornerRadius="10"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                        <Grid
                            Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0"
                                x:Name="textblock"
                                Text="{TemplateBinding Content}"
                                Focusable="False"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                Foreground="{TemplateBinding BorderBrush}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                TextAlignment="Center" 
                                MaxWidth="150"
                                TextTrimming="CharacterEllipsis"/>
                            <TextBlock 
                                x:Name="tagicon"
                                Grid.Column="1"
                                Margin="5 0 0 0"
                                Text="{StaticResource FontAwesomeTimesCircleIcon}"
                                FontFamily="{StaticResource FontAwesomeSolid}"
                                FontSize="{TemplateBinding FontSize}"
                                Foreground="{TemplateBinding BorderBrush}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                TextAlignment="Center" 
                            ></TextBlock>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource ForegroundVeryDark}" Duration="0:0:0.02"
                                                    Storyboard.TargetName="border"
                                                    Storyboard.TargetProperty="Background.Color" />
                                    <ColorAnimation To="{StaticResource ForegroundVeryLight}" Duration="0:0:0.02"
                                                    Storyboard.TargetName="textblock"
                                                    Storyboard.TargetProperty="Foreground.Color" />
                                    <ColorAnimation To="{StaticResource ForegroundVeryLight}" Duration="0:0:0.02"
                                                    Storyboard.TargetName="tagicon"
                                                    Storyboard.TargetProperty="Foreground.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource ForegroundVeryLight}" Duration="0:0:0.02" Storyboard.TargetName="border"
                                                    Storyboard.TargetProperty="Background.Color" />
                                    <ColorAnimation To="{StaticResource ForegroundVeryDark}" Duration="0:0:0.02"
                                                    Storyboard.TargetName="textblock"
                                                    Storyboard.TargetProperty="Foreground.Color" />
                                    <ColorAnimation To="{StaticResource ForegroundVeryDark}" Duration="0:0:0.02"
                                                    Storyboard.TargetName="tagicon"
                                                    Storyboard.TargetProperty="Foreground.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border"
                                    Value="{StaticResource ForegroundDarkBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- Icon button -->
    <Style x:Key="IconButton" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">

        <Setter Property="Background" Value="{StaticResource ForegroundDarkBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundVeryLightBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeXXLarge}" />
        <Setter Property="Padding" Value="24" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Width" Value="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" />

        <Setter Property="local:IsHighlightProperty.Value" Value="False" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <Border x:Name="border"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True">
                            <Grid x:Name="container"
                                  Background="Transparent">
                                <Viewbox>
                                    <TextBlock Text="{TemplateBinding Content}"
                                               Focusable="False"
                                               FontFamily="{TemplateBinding FontFamily}"
                                               FontSize="{TemplateBinding FontSize}"
                                               HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                               Margin="{TemplateBinding Padding}"
                                               SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                               VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Viewbox>
                            </Grid>
                        </Border>
                        <!--Selected Identifier-->
                        <Border Height="4"
                                Background="{StaticResource IconHoverBlueBrush}"
                                VerticalAlignment="Bottom"
                                Visibility="{TemplateBinding local:IsHighlightProperty.Value,Converter={local:BooleanToVisiblityConverter},ConverterParameter=True}" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource IconHoverBlue}" Duration="0:0:0.3"
                                                    Storyboard.TargetName="border"
                                                    Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource ForegroundDark}" Duration="0:0:0.3"
                                                    Storyboard.TargetName="border"
                                                    Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border"
                                    Value="{StaticResource ForegroundDarkBrush}" />
                        </Trigger>
                        <Trigger Property="local:IsHighlightProperty.Value" Value="True">
                            <Setter Property="Background" TargetName="container"
                                    Value="{StaticResource ForegroundVeryDarkBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SolidIconButton" TargetType="{x:Type Button}" BasedOn="{StaticResource IconButton}">
        <Setter Property="FontFamily" Value="{StaticResource FontAwesomeSolid}" />
    </Style>

    <Style x:Key="RegularIconButton" TargetType="{x:Type Button}" BasedOn="{StaticResource IconButton}">
        <Setter Property="FontFamily" Value="{StaticResource FontAwesomeRegular}" />
    </Style>

    <Style x:Key="BrandIconButton" TargetType="{x:Type Button}" BasedOn="{StaticResource IconButton}">
        <Setter Property="FontFamily" Value="{StaticResource FontAwesomeBrand}" />
    </Style>


    <!-- Icon button -->
    <Style x:Key="IconGrowButton" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">

        <Setter Property="Background" Value="{StaticResource WordTransparentBlueBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundVeryLightBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontFamily" Value="{StaticResource FontAwesomeSolid}" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="True">

                        <!-- Add a render scale transform -->
                        <Border.RenderTransform>
                            <ScaleTransform />
                        </Border.RenderTransform>
                        <Border.RenderTransformOrigin>
                            <Point X="0.5" Y="0.5" />
                        </Border.RenderTransformOrigin>

                        <Grid>
                            <Viewbox>
                                <TextBlock Text="{TemplateBinding Content}" 
                                       Focusable="False" 
                                       FontFamily="{TemplateBinding FontFamily}"
                                       FontSize="{TemplateBinding FontSize}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                       Margin="{TemplateBinding Padding}" 
                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Viewbox>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation To="1.4" Duration="0:0:0.15" Storyboard.TargetName="border" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)" />
                                    <DoubleAnimation To="1.4" Duration="0:0:0.15" Storyboard.TargetName="border" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation To="1" Duration="0:0:0.15" Storyboard.TargetName="border" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)" />
                                    <DoubleAnimation To="1" Duration="0:0:0.15" Storyboard.TargetName="border" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ForegroundDarkBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Icon button -->
    <Style x:Key="TreeViewIconGrowButton" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Foreground" Value="{StaticResource WordDarkBlueBrush}"/>

        <Setter Property="Background" Value="{StaticResource WordTransparentBlueBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="FontFamily" Value="{StaticResource FontAwesomeSolid}" />

        <Setter Property="Padding" Value="1" />
        <Setter Property="Opacity" Value="0.8" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True"
                            >

                        <!-- Add a render scale transform -->
                        <Border.RenderTransform>
                            <ScaleTransform />
                        </Border.RenderTransform>
                        <Border.RenderTransformOrigin>
                            <Point X="0.5" Y="0.5" />
                        </Border.RenderTransformOrigin>

                        <Grid>
                            <Viewbox>
                                <TextBlock Text="{TemplateBinding Content}"
                                           x:Name="textblock"
                                           Opacity="{TemplateBinding Opacity}"
                                           Focusable="False"
                                           FontFamily="{TemplateBinding FontFamily}"
                                           FontSize="{TemplateBinding FontSize}"
                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                           Margin="{TemplateBinding Padding}"
                                           SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Viewbox>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation To="1" Duration="0:0:0.3" Storyboard.TargetName="textblock" Storyboard.TargetProperty="Opacity" />
                                    <DoubleAnimation To="1.4" Duration="0:0:0.15" Storyboard.TargetName="border"
                                                     Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)" />
                                    <DoubleAnimation To="1.4" Duration="0:0:0.15" Storyboard.TargetName="border"
                                                     Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation To="0.8" Duration="0:0:0.3" Storyboard.TargetName="textblock" Storyboard.TargetProperty="Opacity" />
                                    <DoubleAnimation To="1" Duration="0:0:0.15" Storyboard.TargetName="border"
                                                     Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)" />
                                    <DoubleAnimation To="1" Duration="0:0:0.15" Storyboard.TargetName="border"
                                                     Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border"
                                    Value="{StaticResource ForegroundDarkBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- Icon button -->
    <Style x:Key="IconDarkerButton" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">

        <Setter Property="Background" Value="{StaticResource WordTransparentBlueBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundLightBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontFamily" Value="{StaticResource FontAwesomeSolid}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="4 0 0 0" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeXXLarge}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="True">

                        <Grid>
                            <Viewbox>
                                <TextBlock 
                                    x:Name="faiconbutton"
                                    Text="{TemplateBinding Content}" 
                                       Focusable="False" 
                                       FontFamily="{TemplateBinding FontFamily}"
                                       FontSize="{TemplateBinding FontSize}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                       Margin="{TemplateBinding Padding}" 
                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Viewbox>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" TargetName="faiconbutton" Value="{StaticResource ForegroundVeryDarkBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ForegroundDarkBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- Check Box Control -->
    <Style x:Key="FontAweSomeCheckBox" TargetType="{x:Type CheckBox}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0 0 10 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="checkBoxBorder"
                                Background="{TemplateBinding Background}" 
                                Margin="{TemplateBinding Padding}" 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid x:Name="markGrid">
                                <Viewbox>
                                    <TextBlock 
                                        x:Name="UnCheckedIcon"
                                        Visibility="{TemplateBinding IsChecked,Converter={local:BooleanToVisiblityGoneConverter},ConverterParameter=True}"
                                        FontSize="{StaticResource FontSizeXXLarge}"
                                        FontFamily="{StaticResource FontAwesomeRegular}"
                                        Text="{StaticResource FontAwesomeSquareIcon}"
                                        Foreground="{StaticResource ForegroundLightBrush}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"></TextBlock>
                                </Viewbox>
                                <Viewbox>
                                    <TextBlock 
                                        x:Name="CheckedIcon"
                                        Visibility="{TemplateBinding IsChecked,Converter={local:BooleanToVisiblityGoneConverter}}"
                                        FontSize="{StaticResource FontSizeXXLarge}"
                                        FontFamily="{StaticResource FontAwesomeRegular}"
                                        Text="{StaticResource FontAwesomeCheckSquareIcon}"
                                        Foreground="{StaticResource ForegroundLightBrush}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"></TextBlock>
                                </Viewbox>
                               
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" TargetName="UnCheckedIcon" Value="{StaticResource ForegroundVeryDarkBrush}"/>
                            <Setter Property="Foreground" TargetName="CheckedIcon" Value="{StaticResource ForegroundVeryDarkBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Regular button -->
    <Style x:Key="SimpleTxtButton" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">

        <Setter Property="Background" Value="{StaticResource WordOrangeBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundVeryLightBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeXXLarge}" />
        <Setter Property="Padding" Value="50 10" />
        <Setter Property="Margin" Value="0 10" />
        <Setter Property="local:IsBusyProperty.Value" Value="False" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border"
                            CornerRadius="10"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="True">
                        <Grid>
                            <TextBlock Text="{TemplateBinding Content}" 
                                   Focusable="False" 
                                       Visibility="{TemplateBinding local:IsBusyProperty.Value, Converter={local:BooleanToVisiblityConverter}}"
                                   FontFamily="{TemplateBinding FontFamily}"
                                   FontSize="{TemplateBinding FontSize}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                   Margin="{TemplateBinding Padding}" 
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                            <TextBlock Style="{StaticResource SpinningText}" 
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                   FontSize="{TemplateBinding FontSize}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       Visibility="{TemplateBinding local:IsBusyProperty.Value, Converter={local:BooleanToVisiblityConverter}, ConverterParameter=True}"
                                   />

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource WordBlue}" Duration="0:0:0.3" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation From="{StaticResource WordBlue}" Duration="0:0:0.3" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ForegroundDarkBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CancelButton" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">

        <Setter Property="Background" Value="{StaticResource BackgroundVeryLightBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundLightBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeXXLarge}" />
        <Setter Property="Padding" Value="50 10" />
        <Setter Property="Margin" Value="0 10" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border"
                            CornerRadius="10"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="True">
                        <TextBlock x:Name="text"
                                   Text="{TemplateBinding Content}"    
                                   Focusable="False" 
                                   FontFamily="{TemplateBinding FontFamily}"
                                   Foreground="{TemplateBinding Foreground}"
                                   FontSize="{TemplateBinding FontSize}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                   Margin="{TemplateBinding Padding}" 
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource BackgroundLight}" Duration="0:0:0.3" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color" />
                                    <ColorAnimation To="{StaticResource ForegroundDark}" Duration="0:0:0.3" Storyboard.TargetName="text" Storyboard.TargetProperty="Foreground.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation From="{StaticResource BackgroundLight}" Duration="0:0:0.3" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color" />
                                    <ColorAnimation From="{StaticResource ForegroundDark}" Duration="0:0:0.3" Storyboard.TargetName="text" Storyboard.TargetProperty="Foreground.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ForegroundDarkBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- SidePanelExpander button -->
    <Style  x:Key="SidePanelExpander" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">

        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundLightBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeXXLarge}" />
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="local:IsHighlightProperty.Value" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border"
                            CornerRadius="10"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="True">
                        <Grid>
                            <Path 
                                x:Name="backpath"  
                                SnapsToDevicePixels="True" 
                                Stroke="{StaticResource IconHoverBlueBrush}" 
                                StrokeThickness="1" 
                                Fill="{StaticResource IconHoverBlueBrush}">
                                <Path.Data>
                                    <PathGeometry Figures="m 0,0 l 10,5 0,50 -10,5 Z" />
                                </Path.Data>
                            </Path>
                            <Path
                                x:Name="closeIcon"  
                                SnapsToDevicePixels="True" 
                                Stroke="{StaticResource ForegroundMainBrush}" 
                                StrokeThickness="1" 
                                Visibility="{TemplateBinding local:IsHighlightProperty.Value,Converter={local:BooleanToVisiblityGoneConverter}}"
                                Fill="{StaticResource ForegroundMainBrush}">

                                <Path.Data>
                                    <PathGeometry Figures="m 3,30 l 4,-3 0,6 -4,-3 Z" />
                                </Path.Data>
                            </Path>
                            <Path
                                x:Name="expandIcon" 
                                Visibility="{TemplateBinding local:IsHighlightProperty.Value,Converter={local:BooleanToVisiblityGoneConverter},ConverterParameter=True}"
                                SnapsToDevicePixels="True" 
                                Stroke="{StaticResource ForegroundMainBrush}"
                                StrokeThickness="1"
                                Fill="{StaticResource ForegroundMainBrush}">
                                <Path.Data>
                                    <PathGeometry Figures="m 3,27 l 4,3 -4,3 0,-6 Z" />
                                </Path.Data>
                            </Path>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource WordOrange}" Duration="0:0:0.3" Storyboard.TargetName="backpath" Storyboard.TargetProperty="Fill.Color" />
                                    <ColorAnimation To="{StaticResource WordOrange}" Duration="0:0:0.3" Storyboard.TargetName="backpath" Storyboard.TargetProperty="Stroke.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource IconHoverBlue}" Duration="0:0:0.3" Storyboard.TargetName="backpath" Storyboard.TargetProperty="Fill.Color" />
                                    <ColorAnimation To="{StaticResource IconHoverBlue}" Duration="0:0:0.3" Storyboard.TargetName="backpath" Storyboard.TargetProperty="Stroke.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="InputConfirmButton" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}" >

        <Setter Property="BorderBrush" Value="{StaticResource WordBlueBrush}"/>
        <Setter Property="Background" Value="{StaticResource WordBlueBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundVeryLightBrush}"/>
        <Setter Property="Padding" Value="10,2"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                        <TextBlock x:Name="contentPresenter"
                                   Text="{TemplateBinding Content}"
                                   Focusable="False"
                                   FontFamily="{TemplateBinding FontFamily}"
                                   FontSize="{TemplateBinding FontSize}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   Margin="{TemplateBinding Padding}"
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="True">
                            <Setter Property="BorderBrush" TargetName="border"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource WordOrangeBrush}" />
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource WordOrangeBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource WordOrangeBrush}" />

                            <Setter Property="Background" TargetName="border" Value="{StaticResource WordOrangeBrush}" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="InputClearButton" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}" >

        <Setter Property="BorderBrush" Value="{StaticResource WordBlueBrush}"/>
        <Setter Property="Background" Value="{StaticResource ForegroundVeryLightBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource WordBlueBrush}"/>
        <Setter Property="Padding" Value="10,2"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                        <TextBlock x:Name="contentPresenter"
                                   Text="{TemplateBinding Content}"
                                   Focusable="False"
                                   FontFamily="{TemplateBinding FontFamily}"
                                   FontSize="{TemplateBinding FontSize}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   Margin="{TemplateBinding Padding}"
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="True">
                            <Setter Property="BorderBrush" TargetName="border"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource WordBlueBrush}" />
                            <Setter Property="Foreground" TargetName="contentPresenter"
                                    Value="{StaticResource ForegroundVeryLightBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource WordBlueBrush}" />
                            <Setter Property="Foreground" TargetName="contentPresenter"
                                    Value="{StaticResource ForegroundVeryLightBrush}" />
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource WordBlueBrush}" />
                            <Setter Property="Foreground" TargetName="contentPresenter"
                                    Value="{StaticResource ForegroundVeryLightBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>